@startuml
skinparam classAttributeIconSize 0
hide empty members

class SingletonMap<K, E implements Identifiable<K>> {
    -INSTANCE: SingletonMap
    -singletonMap : Hashmap<K, E>
    -lastKey: K
    #SingletonMap()
    +getInstance() : SingletonMap
    +getNewKey(): K
    +addEntry(entry: E): boolean
    +removeEntry(keyId: K): boolean
    -readObject(ObjectInputStream)
    -writeObject(ObjectInputStream)
}

class AccountList<E extends Account> {
    -INSTANCE: AccountList
    +AccountList()
    +getInstance() : SingletonMap
    +getNewAccountId(): int
    +addAccount(account: E)
    +removeEntry(accountId: int): boolean
}

class ClientList {
    -INSTANCE: ClientList
    +ClientList()
    +getInstance() : ClientList
}

class CustomerList {
    -INSTANCE: CustomerList
    +CustomerList()
    +getInstance() : CustomerList
    +getClient(clientId: int): Client
}

class ShowList {
    -INSTANCE: ShowList
    +ShowList()
    +getInstance() : ShowList
    +addShow(Show)
    +validShowDate(Date) : boolean
    +checkShowDates(Account) : boolean
}

interface Identifiable<K> {
    +getId(): K
    +setId(K)
    +nextId(K): K
}

class IdentifiableInteger {
    -id: Integer
    +getId() : Integer
    +setId(Integer)
    +nextId(Integer) : Integer
     
}

class Account {
    -name: String
    -address: string
    -phoneNumber: long
    +Account(String, String, Long)
    +getName(): String
    +getAddress(): String
    +getPhoneNumber(): long
    +toString(): String
}

class Customer {
    -creditCardList: ArrayList<CreditCard>
    +Customer(String, String, long, CreditCard)
    +addCreditCard(CreditCard) : boolean
    +getCreditCard() : CreditCard
    +removeCreditCard(long) : boolean
    +removeCreditCards()
    +getCreditCardList() : ArrayList<CreditCard>
    +toString(): String
}

class Show {
    -name: String
    -endDate: Date
    -startDate: Date
    -showDateFormat: SimpleDateFormat
    +Show(Client, String, String, Date)
    +getClient() : Client
    +getName(): String
    +getEndDate(): Date
    +getStartDate(): Date
    +toString(): String
}

class Theater {
    -INSTANCE: Theater
    -clientList: ClientList
    -customerList: CustomerList
    -showList: ShowList
    +getInstance() : Theater
    +getClientList(): ClientList
    +getCustomerList(): CustomerList
    +getShowList(): ShowList
    +storeData() : boolean
    +retrieveData(): Theater
    +hasData(): boolean
    -readObject(ObjectInputStream)
    -writeObject(ObjectInputStream)
}

class CreditCard {
    -cardNumber: long
    -expirationDate: Date
    -dateFormat: SimpleDateFormat
    +CreditCard(cardNumber: long, expirateDate: Date)
    +setExpirationDate(Date)
    +setCardNumber(long)
    +getExpirationDate(): Date
    +getCardNumber(): long
}

Theater -- "ClientList"
Theater -- "CustomerList"
Theater -- "ShowList"

"Identifiable" <|-- "Identifiable<Integer>" : "«bind» K::Integer"
"Identifiable<Integer>" <|-- "IdentifiableInteger"
SingletonMap <|-- "SingletonMap<Account, Integer>" : "«bind» E::Account\n«bind» K::Integer"
SingletonMap <|-- "SingletonMap<Show, Integer>" : "«bind» E::Show\n«bind» K::Integer"
"SingletonMap<Account, Integer>" <|-- AccountList
"SingletonMap<Show, Integer>" <|-- ShowList
AccountList <|-- "AccountList<Client>" : "«bind» E::Client"
AccountList <|-- "AccountList<Customer>" : "«bind» E::Customer"
"AccountList<Client>" <|-- ClientList
"AccountList<Customer>" <|-- CustomerList

IdentifiableInteger <|-- Account
IdentifiableInteger <|-- Show

Account <|-- Client
Account <|-- Customer

AccountList "1" *-- "*" Account
ClientList "1" *-- "*" Client
CustomerList "1" *-- "*" Customer
ShowList "1" *-- "*" Show

Customer "1" *-- "1..*" CreditCard
@enduml